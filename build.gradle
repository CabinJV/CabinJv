plugins {
    id 'java'
    id 'maven-publish'
}

group = 'com.cabin.express'
version = '11.0.5'

publishing {
    repositories {
        maven {
            name = "cabinjv"
            url = uri("https://maven.pkg.github.com/sangqle/cabinjv")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

repositories {
    mavenCentral()
}

ext {
    libDirName = 'lib'
    mainClassName = project.hasProperty("mainClass") ? project.getProperty("mainClass") : ' examples.sample.HServer'
    gradleVersion = gradleVersion = gradle.gradleVersion
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'ch.qos.logback:logback-classic:1.4.5'
    implementation 'org.slf4j:slf4j-api:2.0.9'

    // http
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.4'
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.3.4'

    // Tests dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.assertj:assertj-core:3.27.3'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.mockito:mockito-core:5.4.0'
    testImplementation("org.mockito:mockito-junit-jupiter:5.14.2")
}

test {
    useJUnitPlatform()
}

task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into "$buildDir/libs/libs"
}

jar {
    dependsOn copyDependencies
}

jar {
    manifest {
        attributes(
                'Gradle-Version': gradle.gradleVersion, // Fix to reference the Gradle version
                'Created-By': System.getProperty("java.version") + " (Java)",
                'Class-Path': configurations.runtimeClasspath.files.collect {
                    "libs/" + it.name // Adjusting the path prefix to match the final layout
                }.join(' '),
                'Main-Class': mainClassName // Ensure `mainClassName` is set in your Gradle file
        )
    }
    archiveBaseName.set('cabin')

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
